{"ast":null,"code":"// import React, { useContext } from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import AuthContext from \"../../context/auth/authContext\";\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const authContext = useContext(AuthContext);\n//   const { isAuthenticated, loading } = authContext;\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to=\"/login\" />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n// export default PrivateRoute;","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/components/routing/PrivateRoute.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useContext } from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import AuthContext from \"../../context/auth/authContext\";\n\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const authContext = useContext(AuthContext);\n//   const { isAuthenticated, loading } = authContext;\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) =>\n//         !isAuthenticated && !loading ? (\n//           <Redirect to=\"/login\" />\n//         ) : (\n//           <Component {...props} />\n//         )\n//       }\n//     />\n//   );\n// };\n\n// export default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}