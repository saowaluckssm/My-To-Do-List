{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/components/routing/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Route, useNavigate, Navigate } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    redirectTo,\n    path,\n    ...rest\n  } = _ref;\n  const authContext = useContext(AuthContext); // const navigate = useNavigate();\n\n  const {\n    isAuthenticated\n  } = authContext;\n  console.log(isAuthenticated);\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this); // return (\n  //   // <Route\n  //   //   {...rest}\n  //   //   render={(props) =>\n  //   //     !isAuthenticated ? <Navigate to=\"/login\" /> : <Component {...props} />\n  //   //   }\n  //   // />\n  // );\n};\n\n_s(PrivateRoute, \"g0q6N3HTsGa67OokMUhTOzE2a0M=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","useNavigate","Navigate","AuthContext","PrivateRoute","component","Component","redirectTo","path","rest","authContext","isAuthenticated","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,kBAA7C;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAAyD;AAAA;;AAAA,MAAxD;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA,IAApC;AAA0C,OAAGC;AAA7C,GAAwD;AAC5E,QAAMC,WAAW,GAAGX,UAAU,CAACI,WAAD,CAA9B,CAD4E,CAE5E;;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAsBD,WAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;;AACA,MAAI,CAACA,eAAL,EAAsB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,IAAb;AAAmB,IAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP,CAT4E,CAU5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAlBD;;GAAMJ,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, useNavigate, Navigate } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, redirectTo, path, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  // const navigate = useNavigate();\n  const { isAuthenticated } = authContext;\n  console.log(isAuthenticated);\n  if (!isAuthenticated) {\n    return <Navigate to={redirectTo} />;\n  }\n\n  return <Route path={path} element={<Component />} />;\n  // return (\n  //   // <Route\n  //   //   {...rest}\n  //   //   render={(props) =>\n  //   //     !isAuthenticated ? <Navigate to=\"/login\" /> : <Component {...props} />\n  //   //   }\n  //   // />\n  // );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}