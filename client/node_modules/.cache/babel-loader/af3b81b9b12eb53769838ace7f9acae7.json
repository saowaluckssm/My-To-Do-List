{"ast":null,"code":"import { ADD_LIST, DELETE_LIST, SET_CURRENT, CLEAR_CURRENT, UPDATE_LIST, FILTER_LISTS, CLEAR_FILTER } from \"../types\"; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_LIST:\n      // console.log(action.payload);\n      localStorage.setItem(\"lists\", JSON.stringify(action.payload));\n      return { ...state,\n        lists: [...state.lists, action.payload]\n      };\n\n    case UPDATE_LIST:\n      return { ...state,\n        lists: state.lists.map(list => list.id === action.payload.id ? action.payload : list)\n      };\n\n    case DELETE_LIST:\n      return { ...state,\n        lists: state.lists.filter(list => list.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_LISTS:\n      return { ...state,\n        filtered: state.lists.filter(list => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return list.msg.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/react-to-do-list/src/context/list/listReducer.js"],"names":["ADD_LIST","DELETE_LIST","SET_CURRENT","CLEAR_CURRENT","UPDATE_LIST","FILTER_LISTS","CLEAR_FILTER","state","action","type","localStorage","setItem","JSON","stringify","payload","lists","map","list","id","filter","current","filtered","regex","RegExp","msg","match"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,YAPF,QAQO,UARP,C,CAUA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AACE;AACAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACM,OAAtB,CAA9B;AACA,aAAO,EACL,GAAGP,KADE;AAELQ,QAAAA,KAAK,EAAE,CAAC,GAAGR,KAAK,CAACQ,KAAV,EAAiBP,MAAM,CAACM,OAAxB;AAFF,OAAP;;AAIF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IACrBA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACM,OAAP,CAAeI,EAA3B,GAAgCV,MAAM,CAACM,OAAvC,GAAiDG,IAD5C;AAFF,OAAP;;AAMF,SAAKhB,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,CAAYI,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACM,OAAhD;AAFF,OAAP;;AAIF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELa,QAAAA,OAAO,EAAEZ,MAAM,CAACM;AAFX,OAAP;;AAIF,SAAKX,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELa,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELc,QAAAA,QAAQ,EAAEd,KAAK,CAACQ,KAAN,CAAYI,MAAZ,CAAoBF,IAAD,IAAU;AACrC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEf,MAAM,CAACM,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,IAAI,CAACO,GAAL,CAASC,KAAT,CAAeH,KAAf,CAAP;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELc,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAKF;AACE,aAAOd,KAAP;AA7CJ;AA+CD,CAhDD","sourcesContent":["import {\n  ADD_LIST,\n  DELETE_LIST,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LIST,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"../types\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_LIST:\n      // console.log(action.payload);\n      localStorage.setItem(\"lists\", JSON.stringify(action.payload));\n      return {\n        ...state,\n        lists: [...state.lists, action.payload],\n      };\n    case UPDATE_LIST:\n      return {\n        ...state,\n        lists: state.lists.map((list) =>\n          list.id === action.payload.id ? action.payload : list\n        ),\n      };\n    case DELETE_LIST:\n      return {\n        ...state,\n        lists: state.lists.filter((list) => list.id !== action.payload),\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case FILTER_LISTS:\n      return {\n        ...state,\n        filtered: state.lists.filter((list) => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return list.msg.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}