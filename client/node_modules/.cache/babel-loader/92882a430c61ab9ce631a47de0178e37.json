{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport { USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: sessionStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Login User\n\n  const login = async formData => {\n    console.log(formData);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/\", formData, config);\n      console.log(res.data);\n      console.log(res.data.user_token);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","sessionStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","login","formData","console","log","config","headers","res","post","data","user_token","type","payload","response","logout","clearErrors","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,WADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,YALF,QAMO,UANP;;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAE,IAJa;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACG,WAAD,EAAcQ,YAAd,CAApC,CAT2B,CAW3B;;AACA,QAAMU,KAAK,GAAG,MAAOC,QAAP,IAAoB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAAW,wBAAX,EAAqCN,QAArC,EAA+CG,MAA/C,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACE,IAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACE,IAAJ,CAASC,UAArB;AACAV,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE1B,aADC;AAEP2B,QAAAA,OAAO,EAAEL,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KARD,CAQE,OAAOX,KAAP,EAAc;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAE,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEzB,UADC;AAEP0B,QAAAA,OAAO,EAAEd,KAAK,CAACe;AAFR,OAAD,CAAR;AAID;AACF,GAtBD,CAZ2B,CAmC3B;;;AACA,QAAMC,MAAM,GAAG,MAAMd,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAExB;AAAR,GAAD,CAA7B,CApC2B,CAsC3B;;;AACA,QAAM4B,WAAW,GAAG,MAAMf,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAEvB;AAAR,GAAD,CAAlC;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eADlB;AAELC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAFV;AAGLC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAHP;AAILC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAJR;AAKLG,MAAAA,KALK;AAMLa,MAAAA,MANK;AAOLC,MAAAA;AAPK,KADT;AAAA,cAWGzB,KAAK,CAAC0B;AAXT;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxDD;;GAAM3B,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\n\nimport {\n  USER_LOADED,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: sessionStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Login User\n  const login = async (formData) => {\n    console.log(formData);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/\", formData, config);\n      console.log(res.data);\n      console.log(res.data.user_token);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response,\n      });\n    }\n  };\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        login,\n        logout,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}