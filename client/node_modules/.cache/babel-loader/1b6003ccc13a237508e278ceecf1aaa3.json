{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = props => {\n  _s();\n\n  const initialState = [];\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n  const valueIsValid = state.value;\n  const hasError = !valueIsValid && state.isTouched; // Check input change\n\n  const valueChangeHandler = e => {\n    dispatch({\n      type: CHECK_INPUT,\n      value: e.target.value\n    });\n  }; // Check input Blur\n\n\n  const inputBlurHandler = () => {\n    dispatch({\n      type: CHECK_BLUR\n    });\n  }; // Reset value\n\n\n  const reset = () => {\n    dispatch({\n      type: RESET\n    });\n  }; // return (\n  //   <AlertContext.Provider\n  //     value={{\n  //       value: state.value,\n  //       isValid: valueIsValid,\n  //       hasError,\n  //       valueChangeHandler,\n  //       inputBlurHandler,\n  //       reset,\n  //     }}\n  //   >\n  //     {props.children}\n  //   </AlertContext.Provider>\n  // );\n\n\n  return {\n    value: state.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(AlertState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/context/alert/AlertState.js"],"names":["React","useReducer","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","valueIsValid","value","hasError","isTouched","valueChangeHandler","e","type","CHECK_INPUT","target","inputBlurHandler","CHECK_BLUR","reset","RESET","isValid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,YAAD,EAAeK,YAAf,CAApC;AAEA,QAAMG,YAAY,GAAGF,KAAK,CAACG,KAA3B;AACA,QAAMC,QAAQ,GAAG,CAACF,YAAD,IAAiBF,KAAK,CAACK,SAAxC,CAN4B,CAQ5B;;AACA,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAChCN,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEC,WAAR;AAAqBN,MAAAA,KAAK,EAAEI,CAAC,CAACG,MAAF,CAASP;AAArC,KAAD,CAAR;AACD,GAFD,CAT4B,CAa5B;;;AACA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7BV,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEI;AAAR,KAAD,CAAR;AACD,GAFD,CAd4B,CAkB5B;;;AACA,QAAMC,KAAK,GAAG,MAAM;AAClBZ,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEM;AAAR,KAAD,CAAR;AACD,GAFD,CAnB4B,CAuB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELY,IAAAA,OAAO,EAAEb,YAFJ;AAGLE,IAAAA,QAHK;AAILE,IAAAA,kBAJK;AAKLK,IAAAA,gBALK;AAMLE,IAAAA;AANK,GAAP;AAQD,CA9CD;;GAAMhB,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = (props) => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  const valueIsValid = state.value;\n  const hasError = !valueIsValid && state.isTouched;\n\n  // Check input change\n  const valueChangeHandler = (e) => {\n    dispatch({ type: CHECK_INPUT, value: e.target.value });\n  };\n\n  // Check input Blur\n  const inputBlurHandler = () => {\n    dispatch({ type: CHECK_BLUR });\n  };\n\n  // Reset value\n  const reset = () => {\n    dispatch({ type: RESET });\n  };\n\n  // return (\n  //   <AlertContext.Provider\n  //     value={{\n  //       value: state.value,\n  //       isValid: valueIsValid,\n  //       hasError,\n  //       valueChangeHandler,\n  //       inputBlurHandler,\n  //       reset,\n  //     }}\n  //   >\n  //     {props.children}\n  //   </AlertContext.Provider>\n  // );\n\n  return {\n    value: state.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}