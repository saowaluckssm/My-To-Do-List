{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\"; // import useInput from \"../../context/alert/useInput\";\n\nimport useInput from \"../../context/alert/AlertState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const alertContext = useContext(AlertContext);\n  const {\n    value,\n    isValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  } = alertContext; // const [user, setUser] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n  // const { email, password } = user;\n\n  const handleChangeEmail = e => {\n    valueChangeHandler(e.target.value);\n    inputBlurHandler();\n    reset();\n  }; // const {\n  //   value: enteredEmail,\n  //   isValid: enteredEmailIsValid,\n  //   hasError: emailInputHasError,\n  //   valueChangeHandler: emailChangedHandler,\n  //   inputBlurHandler: emailBlurHandler,\n  //   reset: resetEmailInput,\n  // } = useInput((value) => value.includes(\"@\"));\n  // const {\n  //   value: enteredPassword,\n  //   isValid: enteredPasswordIsValid,\n  //   hasError: passwordInputHasError,\n  //   valueChangeHandler: passwordChangedHandler,\n  //   inputBlurHandler: passwordBlurHandler,\n  //   reset: resetPasswordInput,\n  // } = useInput((value) => value.trim() !== \"\");\n\n\n  let formIsValid = false;\n\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"Login Submit\"); // if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n    //   return console.log(\"invalid\");\n    // }\n    // console.log(enteredEmail);\n    // console.log(enteredPassword);\n    // resetEmailInput();\n    // resetPasswordInput();\n  }; // const emailInputClasses = emailInputHasError\n  //   ? \"form-group form-control invalid\"\n  //   : \"form-group form-control\";\n  // const passwordInputClasses = emailInputHasError\n  //   ? \"form-group form-control invalid\"\n  //   : \"form-group form-control\";\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rapptr Labs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: enteredEmail,\n          placeholder: \"user@rapptrlabs.com\",\n          onChange: emailChangedHandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: enteredPassword,\n          placeholder: \"Must be at least 4 characters\",\n          onChange: passwordChangedHandler,\n          onBlur: passwordBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), passwordInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not valid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\",\n        disabled: !formIsValid,\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"CVRwm8YHt+JMy6p3FcE0IwxV+q4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/components/auth/Login.js"],"names":["React","useState","useContext","AlertContext","useInput","Login","alertContext","value","isValid","hasError","valueChangeHandler","inputBlurHandler","reset","handleChangeEmail","e","target","formIsValid","enteredEmailIsValid","enteredPasswordIsValid","onSubmit","preventDefault","console","log","emailInputClasses","enteredEmail","emailChangedHandler","emailBlurHandler","emailInputHasError","passwordInputClasses","enteredPassword","passwordChangedHandler","passwordBlurHandler","passwordInputHasError"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\n// import useInput from \"../../context/alert/useInput\";\nimport useInput from \"../../context/alert/AlertState\";\n\nconst Login = () => {\n  const alertContext = useContext(AlertContext);\n\n  const {\n    value,\n    isValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  } = alertContext;\n\n  // const [user, setUser] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n\n  // const { email, password } = user;\n\n  const handleChangeEmail = (e) => {\n    valueChangeHandler(e.target.value);\n    inputBlurHandler();\n    reset();\n  };\n\n  // const {\n  //   value: enteredEmail,\n  //   isValid: enteredEmailIsValid,\n  //   hasError: emailInputHasError,\n  //   valueChangeHandler: emailChangedHandler,\n  //   inputBlurHandler: emailBlurHandler,\n  //   reset: resetEmailInput,\n  // } = useInput((value) => value.includes(\"@\"));\n\n  // const {\n  //   value: enteredPassword,\n  //   isValid: enteredPasswordIsValid,\n  //   hasError: passwordInputHasError,\n  //   valueChangeHandler: passwordChangedHandler,\n  //   inputBlurHandler: passwordBlurHandler,\n  //   reset: resetPasswordInput,\n  // } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Login Submit\");\n\n    // if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n    //   return console.log(\"invalid\");\n    // }\n\n    // console.log(enteredEmail);\n    // console.log(enteredPassword);\n    // resetEmailInput();\n    // resetPasswordInput();\n  };\n\n  // const emailInputClasses = emailInputHasError\n  //   ? \"form-group form-control invalid\"\n  //   : \"form-group form-control\";\n\n  // const passwordInputClasses = emailInputHasError\n  //   ? \"form-group form-control invalid\"\n  //   : \"form-group form-control\";\n\n  return (\n    <div className=\"form-container\">\n      <h1>Rapptr Labs</h1>\n      <form onSubmit={onSubmit}>\n        <div className={emailInputClasses}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={enteredEmail}\n            placeholder=\"user@rapptrlabs.com\"\n            onChange={emailChangedHandler}\n            onBlur={emailBlurHandler}\n          />\n          {emailInputHasError && <p>Not valid email</p>}\n        </div>\n        <div className={passwordInputClasses}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={enteredPassword}\n            placeholder=\"Must be at least 4 characters\"\n            onChange={passwordChangedHandler}\n            onBlur={passwordBlurHandler}\n          />\n          {passwordInputHasError && <p>Not valid password</p>}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          disabled={!formIsValid}\n          className=\"btn btn-primary btn-block\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}