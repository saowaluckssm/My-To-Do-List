{"ast":null,"code":"import { USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../types\"; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case LOGIN_SUCCESS:\n      sessionStorage.setItem(\"token\", action.payload);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case LOGIN_FAIL:\n    case LOGOUT:\n      sessionStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/context/auth/authReducer.js"],"names":["USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","state","action","type","isAuthenticated","loading","sessionStorage","setItem","payload","removeItem","token","error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,UAA/D,C,CAEA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,aAAL;AACEQ,MAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCL,MAAM,CAACM,OAAvC;AACA,aAAO,EACL,GAAGP,KADE;AAEL,WAAGC,MAAM,CAACM,OAFL;AAGLJ,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKN,UAAL;AACA,SAAKC,MAAL;AACEM,MAAAA,cAAc,CAACG,UAAf,CAA0B,OAA1B;AACA,aAAO,EACL,GAAGR,KADE;AAELS,QAAAA,KAAK,EAAE,IAFF;AAGLN,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE,KAJJ;AAKLM,QAAAA,KAAK,EAAET,MAAM,CAACM;AALT,OAAP;;AAQF;AACE,aAAOP,KAAP;AA5BJ;AA8BD,CA/BD","sourcesContent":["import { USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../types\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      sessionStorage.setItem(\"token\", action.payload);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case LOGIN_FAIL:\n    case LOGOUT:\n      sessionStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}