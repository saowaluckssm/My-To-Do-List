{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\"; // import useInput from \"../../context/alert/useInput\";\n\nimport useInput from \"../../context/alert/AlertState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const alertContext = useContext(AlertContext);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = alertContext;\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = alertContext;\n  console.log(emailChangedHandler, passwordChangedHandler); // console.log(enteredEmail, enteredPassword);\n  // const [user, setUser] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n  // const { email, password } = user;\n  // const handleChangeemail = (value) => {\n  //   emailChangedHandler((value) => value.includes(\"@\"));\n  // };\n  // const handleChangepassword = (e) => {\n  //   passwordChangedHandler((value) => value.trim() !== \"\");\n  // };\n  // const {\n  //   value: enteredEmail,\n  //   isValid: enteredEmailIsValid,\n  //   hasError: emailInputHasError,\n  //   valueChangeHandler: emailChangedHandler,\n  //   inputBlurHandler: emailBlurHandler,\n  //   reset: resetEmailInput,\n  // } = useInput((value) => value.includes(\"@\"));\n  // const {\n  //   value: enteredPassword,\n  //   isValid: enteredPasswordIsValid,\n  //   hasError: passwordInputHasError,\n  //   valueChangeHandler: passwordChangedHandler,\n  //   inputBlurHandler: passwordBlurHandler,\n  //   reset: resetPasswordInput,\n  // } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"Login Submit\");\n\n    if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n      return console.log(\"invalid\");\n    }\n\n    console.log(enteredEmail);\n    console.log(enteredPassword);\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const emailInputClasses = emailInputHasError ? \"form-group form-control user-icon invalid\" : \"form-group form-control user-icon\";\n  const passwordInputClasses = passwordInputHasError ? \"form-group form-control lock-icon invalid\" : \"form-group form-control lock-icon\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rapptr Labs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: enteredEmail,\n          placeholder: \"user@rapptrlabs.com\",\n          onChange: emailChangedHandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-user fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: enteredPassword,\n          placeholder: \"Must be at least 4 characters\",\n          onChange: passwordChangedHandler,\n          onBlur: passwordBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), passwordInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not valid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\",\n        disabled: !formIsValid,\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"CVRwm8YHt+JMy6p3FcE0IwxV+q4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/components/auth/Login.js"],"names":["React","useState","useContext","AlertContext","useInput","Login","alertContext","value","enteredEmail","isValid","enteredEmailIsValid","hasError","emailInputHasError","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","reset","resetEmailInput","enteredPassword","enteredPasswordIsValid","passwordInputHasError","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","console","log","formIsValid","onSubmit","e","preventDefault","emailInputClasses","passwordInputClasses"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\n// import useInput from \"../../context/alert/useInput\";\nimport useInput from \"../../context/alert/AlertState\";\n\nconst Login = () => {\n  const alertContext = useContext(AlertContext);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = alertContext;\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = alertContext;\n\n  console.log(emailChangedHandler, passwordChangedHandler);\n\n  // console.log(enteredEmail, enteredPassword);\n\n  // const [user, setUser] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  // });\n\n  // const { email, password } = user;\n\n  // const handleChangeemail = (value) => {\n  //   emailChangedHandler((value) => value.includes(\"@\"));\n  // };\n\n  // const handleChangepassword = (e) => {\n  //   passwordChangedHandler((value) => value.trim() !== \"\");\n  // };\n\n  // const {\n  //   value: enteredEmail,\n  //   isValid: enteredEmailIsValid,\n  //   hasError: emailInputHasError,\n  //   valueChangeHandler: emailChangedHandler,\n  //   inputBlurHandler: emailBlurHandler,\n  //   reset: resetEmailInput,\n  // } = useInput((value) => value.includes(\"@\"));\n\n  // const {\n  //   value: enteredPassword,\n  //   isValid: enteredPasswordIsValid,\n  //   hasError: passwordInputHasError,\n  //   valueChangeHandler: passwordChangedHandler,\n  //   inputBlurHandler: passwordBlurHandler,\n  //   reset: resetPasswordInput,\n  // } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Login Submit\");\n\n    if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n      return console.log(\"invalid\");\n    }\n\n    console.log(enteredEmail);\n    console.log(enteredPassword);\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-group form-control user-icon invalid\"\n    : \"form-group form-control user-icon\";\n\n  const passwordInputClasses = passwordInputHasError\n    ? \"form-group form-control lock-icon invalid\"\n    : \"form-group form-control lock-icon\";\n\n  return (\n    <div className=\"form-container\">\n      <h1>Rapptr Labs</h1>\n      <form onSubmit={onSubmit}>\n        <div className={emailInputClasses}>\n          <label htmlFor=\"email\">Email</label>\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={enteredEmail}\n            placeholder=\"user@rapptrlabs.com\"\n            onChange={emailChangedHandler}\n            onBlur={emailBlurHandler}\n          />\n          <i className=\"fa fa-user fa-lg\"></i>\n\n          {emailInputHasError && <p>Not valid email</p>}\n        </div>\n        <div className={passwordInputClasses}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={enteredPassword}\n            placeholder=\"Must be at least 4 characters\"\n            onChange={passwordChangedHandler}\n            onBlur={passwordBlurHandler}\n          />\n          <i className=\"fas fa-lock fa-lg\"></i>\n          {passwordInputHasError && <p>Not valid password</p>}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          disabled={!formIsValid}\n          className=\"btn btn-primary btn-block\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}