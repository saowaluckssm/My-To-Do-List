{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\"; // import AlertContext from \"../../context/alert/alertContext\";\n\nimport useInput from \"../../context/alert/useInput\"; // import useInput from \"../../context/alert/AlertState\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = user;\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\"));\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim() !== \"\");\n  let formIsValid = false;\n\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault(); // console.log(\"Login Submit\");\n\n    if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n      return console.log(\"invalid\");\n    } // console.log(enteredEmail);\n    // console.log(enteredPassword);\n\n\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const emailInputClasses = emailInputHasError ? \"form-group form-control invalid\" : \"form-group form-control\";\n  const passwordInputClasses = passwordInputHasError ? \"form-group form-control invalid\" : \"form-group form-control\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rapptr Labs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-control lock-icon\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"user@rapptrlabs.com\",\n          onChange: onChange // onBlur={emailBlurHandler}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-user fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-control lock-icon\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          placeholder: \"Must be at least 4 characters\",\n          onChange: onChange // onBlur={passwordBlurHandler}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\" // disabled={!formIsValid}\n        ,\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"G0zv134EMMdNUOXyqcE9plwZz+4=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/src/components/auth/Login.js"],"names":["React","useState","useContext","useInput","Login","user","setUser","email","password","value","enteredEmail","isValid","enteredEmailIsValid","hasError","emailInputHasError","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","reset","resetEmailInput","includes","enteredPassword","enteredPasswordIsValid","passwordInputHasError","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","trim","formIsValid","onSubmit","e","preventDefault","console","log","emailInputClasses","passwordInputClasses","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n// import AlertContext from \"../../context/alert/alertContext\";\nimport useInput from \"../../context/alert/useInput\";\n// import useInput from \"../../context/alert/AlertState\";\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = user;\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"Login Submit\");\n\n    if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n      return console.log(\"invalid\");\n    }\n\n    // console.log(enteredEmail);\n    // console.log(enteredPassword);\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-group form-control invalid\"\n    : \"form-group form-control\";\n\n  const passwordInputClasses = passwordInputHasError\n    ? \"form-group form-control invalid\"\n    : \"form-group form-control\";\n\n  return (\n    <div className=\"form-container\">\n      <h1>Rapptr Labs</h1>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group form-control lock-icon\">\n          <label htmlFor=\"email\">Email</label>\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"user@rapptrlabs.com\"\n            onChange={onChange}\n            // onBlur={emailBlurHandler}\n          />\n          <i className=\"fa fa-user fa-lg\"></i>\n\n          {/* {emailInputHasError && <p>Not valid email</p>} */}\n        </div>\n        <div className=\"form-group form-control lock-icon\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Must be at least 4 characters\"\n            onChange={onChange}\n            // onBlur={passwordBlurHandler}\n          />\n          <i className=\"fas fa-lock fa-lg\"></i>\n          {/* {passwordInputHasError && <p>Not valid password</p>} */}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          // disabled={!formIsValid}\n          className=\"btn btn-primary btn-block\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}