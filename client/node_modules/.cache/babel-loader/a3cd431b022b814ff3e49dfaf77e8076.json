{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\"; // import AlertContext from \"../../context/alert/alertContext\";\n// import useInput from \"../../context/alert/useInput\";\n\nimport useInput from \"../../context/alert/AlertState\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const authContext = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    login,\n    error,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate(\"/\");\n    }\n\n    if (error) {\n      console.log(error.data.message);\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\"));\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput\n  } = useInput(value => value.trim() !== \"\" && value.length >= 4);\n  let formIsValid = false;\n\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"Login Submit\");\n\n    if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n      return console.log(\"invalid\");\n    } else {\n      login({\n        email: enteredEmail,\n        password: enteredPassword\n      });\n    }\n\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const emailInputClasses = emailInputHasError ? \"form-group form-control user-icon invalid\" : \"form-group form-control user-icon\";\n  const passwordInputClasses = passwordInputHasError ? \"form-group form-control lock-icon invalid\" : \"form-group form-control lock-icon\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rapptr Labs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: enteredEmail,\n          placeholder: \"user@rapptrlabs.com\",\n          onChange: emailChangedHandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-user fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: enteredPassword,\n          placeholder: \"Must be at least 4 characters\",\n          onChange: passwordChangedHandler,\n          onBlur: passwordBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), passwordInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not valid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\",\n        disabled: !formIsValid,\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"7fY2B1c4bhKN6n5Ur1X4KSz6fY8=\", false, function () {\n  return [useNavigate, useInput, useInput];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","useNavigate","useInput","AuthContext","Login","props","authContext","navigate","login","error","isAuthenticated","console","log","data","message","history","value","enteredEmail","isValid","enteredEmailIsValid","hasError","emailInputHasError","valueChangeHandler","emailChangedHandler","inputBlurHandler","emailBlurHandler","reset","resetEmailInput","includes","enteredPassword","enteredPasswordIsValid","passwordInputHasError","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","trim","length","formIsValid","onSubmit","e","preventDefault","email","password","emailInputClasses","passwordInputClasses"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\n// import AlertContext from \"../../context/alert/alertContext\";\n// import useInput from \"../../context/alert/useInput\";\nimport useInput from \"../../context/alert/AlertState\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst Login = (props) => {\n  const authContext = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const { login, error, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate(\"/\");\n    }\n\n    if (error) {\n      console.log(error.data.message);\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput((value) => value.trim() !== \"\" && value.length >= 4);\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Login Submit\");\n\n    if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n      return console.log(\"invalid\");\n    } else {\n      login({\n        email: enteredEmail,\n        password: enteredPassword,\n      });\n    }\n\n    resetEmailInput();\n    resetPasswordInput();\n  };\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-group form-control user-icon invalid\"\n    : \"form-group form-control user-icon\";\n\n  const passwordInputClasses = passwordInputHasError\n    ? \"form-group form-control lock-icon invalid\"\n    : \"form-group form-control lock-icon\";\n\n  return (\n    <div className=\"form-container\">\n      <h1>Rapptr Labs</h1>\n      <form onSubmit={onSubmit}>\n        <div className={emailInputClasses}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={enteredEmail}\n            placeholder=\"user@rapptrlabs.com\"\n            onChange={emailChangedHandler}\n            onBlur={emailBlurHandler}\n          />\n          <i className=\"fa fa-user fa-lg\"></i>\n\n          {emailInputHasError && <p>Not valid email</p>}\n        </div>\n        <div className={passwordInputClasses}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={enteredPassword}\n            placeholder=\"Must be at least 4 characters\"\n            onChange={passwordChangedHandler}\n            onBlur={passwordBlurHandler}\n          />\n          <i className=\"fas fa-lock fa-lg\"></i>\n          {passwordInputHasError && <p>Not valid password</p>}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          disabled={!formIsValid}\n          className=\"btn btn-primary btn-block\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}