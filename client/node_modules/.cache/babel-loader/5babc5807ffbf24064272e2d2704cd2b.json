{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/react-to-do-list/src/context/list/ListState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ListContext from \"./listContext\";\nimport listReducer from \"./listReducer\";\nimport { ADD_LIST, DELETE_LIST, SET_CURRENT, CLEAR_CURRENT, UPDATE_LIST, FILTER_LISTS, CLEAR_FILTER } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListState = props => {\n  _s();\n\n  const initialState = {\n    lists: [{\n      id: 1,\n      msg: \"yoga\"\n    }, {\n      id: 2,\n      msg: \"study\"\n    }, {\n      id: 3,\n      msg: \"eat\"\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(listReducer, initialState); // Save lists to localstorage\n\n  const saveLocallists = inputText => {// if (localStorage.getItem(\"lists\") === null) {\n    //   localStorage.setItem(\"lists\", JSON.stringify([]));\n    // }\n  };\n\n  saveLocallists(); // Add List\n\n  const addList = inputText => {\n    inputText.id = uuidv4();\n    console.log(inputText);\n    localStorage.setItem(\"lists\", JSON.stringify([inputText]));\n    dispatch({\n      type: ADD_LIST,\n      payload: inputText\n    });\n  }; // Delete List\n\n\n  const deleteList = id => {\n    console.log(id);\n    dispatch({\n      type: DELETE_LIST,\n      payload: id\n    });\n  }; // Set Current List\n\n\n  const setCurrent = inputText => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: inputText\n    });\n  }; // Clear Current List\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update List\n\n\n  const updateList = inputText => {\n    dispatch({\n      type: UPDATE_LIST,\n      payload: inputText\n    });\n  }; // Filter Lists\n\n\n  const filterLists = text => {\n    dispatch({\n      type: FILTER_LISTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListContext.Provider, {\n    value: {\n      lists: state.lists,\n      current: state.current,\n      filtered: state.filtered,\n      saveLocallists,\n      addList,\n      deleteList,\n      setCurrent,\n      clearCurrent,\n      updateList,\n      filterLists,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ListState;\nexport default ListState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListState\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/react-to-do-list/src/context/list/ListState.js"],"names":["React","useReducer","v4","uuidv4","ListContext","listReducer","ADD_LIST","DELETE_LIST","SET_CURRENT","CLEAR_CURRENT","UPDATE_LIST","FILTER_LISTS","CLEAR_FILTER","ListState","props","initialState","lists","id","msg","current","filtered","state","dispatch","saveLocallists","inputText","addList","console","log","localStorage","setItem","JSON","stringify","type","payload","deleteList","setCurrent","clearCurrent","updateList","filterLists","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ListContext from \"./listContext\";\nimport listReducer from \"./listReducer\";\nimport {\n  ADD_LIST,\n  DELETE_LIST,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LIST,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"../types\";\n\nconst ListState = (props) => {\n  const initialState = {\n    lists: [\n      {\n        id: 1,\n        msg: \"yoga\",\n      },\n      {\n        id: 2,\n        msg: \"study\",\n      },\n      {\n        id: 3,\n        msg: \"eat\",\n      },\n    ],\n    current: null,\n    filtered: null,\n  };\n\n  const [state, dispatch] = useReducer(listReducer, initialState);\n\n  // Save lists to localstorage\n  const saveLocallists = (inputText) => {\n    // if (localStorage.getItem(\"lists\") === null) {\n    //   localStorage.setItem(\"lists\", JSON.stringify([]));\n    // }\n  };\n\n  saveLocallists();\n\n  // Add List\n  const addList = (inputText) => {\n    inputText.id = uuidv4();\n    console.log(inputText);\n    localStorage.setItem(\"lists\", JSON.stringify([inputText]));\n    dispatch({ type: ADD_LIST, payload: inputText });\n  };\n\n  // Delete List\n  const deleteList = (id) => {\n    console.log(id);\n    dispatch({ type: DELETE_LIST, payload: id });\n  };\n\n  // Set Current List\n  const setCurrent = (inputText) => {\n    dispatch({ type: SET_CURRENT, payload: inputText });\n  };\n\n  // Clear Current List\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update List\n  const updateList = (inputText) => {\n    dispatch({ type: UPDATE_LIST, payload: inputText });\n  };\n\n  // Filter Lists\n  const filterLists = (text) => {\n    dispatch({ type: FILTER_LISTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ListContext.Provider\n      value={{\n        lists: state.lists,\n        current: state.current,\n        filtered: state.filtered,\n        saveLocallists,\n        addList,\n        deleteList,\n        setCurrent,\n        clearCurrent,\n        updateList,\n        filterLists,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ListContext.Provider>\n  );\n};\n\nexport default ListState;\n"]},"metadata":{},"sourceType":"module"}