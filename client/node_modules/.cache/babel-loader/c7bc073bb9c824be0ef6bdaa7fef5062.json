{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/react-to-do-list/src/components/lists/ListForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ListContext from \"../../context/list/listContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListForm = () => {\n  _s();\n\n  const listContext = useContext(ListContext);\n  const {\n    saveLocallists,\n    addList,\n    updateList,\n    current\n  } = listContext;\n  const [inputText, setInputText] = useState({\n    msg: \"\"\n  });\n  useEffect(() => {\n    saveLocallists(inputText);\n\n    if (current !== null) {\n      setInputText(current);\n    } else {\n      setInputText({\n        msg: \"\"\n      });\n    }\n  }, [listContext, current, saveLocallists]);\n  const {\n    msg\n  } = inputText;\n\n  const handleChange = e => {\n    // const newValue = e.target.value;\n    setInputText({ ...inputText,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (current === null) {\n      addList(inputText);\n    } else {\n      updateList(inputText);\n    }\n\n    setInputText({\n      msg: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      type: \"text\",\n      name: \"msg\",\n      value: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListForm, \"BrdF6GvQ13euiZAPf9zjTaORe18=\");\n\n_c = ListForm;\nexport default ListForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListForm\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/react-to-do-list/src/components/lists/ListForm.js"],"names":["React","useState","useContext","useEffect","ListContext","ListForm","listContext","saveLocallists","addList","updateList","current","inputText","setInputText","msg","handleChange","e","target","name","value","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,WAAW,GAAGJ,UAAU,CAACE,WAAD,CAA9B;AAEA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA;AAAvC,MAAmDJ,WAAzD;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AACzCY,IAAAA,GAAG,EAAE;AADoC,GAAD,CAA1C;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACI,SAAD,CAAd;;AACA,QAAID,OAAO,KAAK,IAAhB,EAAsB;AACpBE,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD,MAEO;AACLE,MAAAA,YAAY,CAAC;AACXC,QAAAA,GAAG,EAAE;AADM,OAAD,CAAZ;AAGD;AACF,GATQ,EASN,CAACP,WAAD,EAAcI,OAAd,EAAuBH,cAAvB,CATM,CAAT;AAWA,QAAM;AAAEM,IAAAA;AAAF,MAAUF,SAAhB;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1B;AAEAH,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA1C,KAAD,CAAZ;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIT,OAAO,KAAK,IAAhB,EAAsB;AACpBF,MAAAA,OAAO,CAACG,SAAD,CAAP;AACD,KAFD,MAEO;AACLF,MAAAA,UAAU,CAACE,SAAD,CAAV;AACD;;AACDC,IAAAA,YAAY,CAAC;AACXC,MAAAA,GAAG,EAAE;AADM,KAAD,CAAZ;AAGD,GATD;;AAUA,sBACE;AAAA,4BACE;AAAO,MAAA,QAAQ,EAAEC,YAAjB;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,IAAI,EAAC,KAAhD;AAAsD,MAAA,KAAK,EAAED;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5CD;;GAAMd,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ListContext from \"../../context/list/listContext\";\n\nconst ListForm = () => {\n  const listContext = useContext(ListContext);\n\n  const { saveLocallists, addList, updateList, current } = listContext;\n\n  const [inputText, setInputText] = useState({\n    msg: \"\",\n  });\n\n  useEffect(() => {\n    saveLocallists(inputText);\n    if (current !== null) {\n      setInputText(current);\n    } else {\n      setInputText({\n        msg: \"\",\n      });\n    }\n  }, [listContext, current, saveLocallists]);\n\n  const { msg } = inputText;\n\n  const handleChange = (e) => {\n    // const newValue = e.target.value;\n\n    setInputText({ ...inputText, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = () => {\n    if (current === null) {\n      addList(inputText);\n    } else {\n      updateList(inputText);\n    }\n    setInputText({\n      msg: \"\",\n    });\n  };\n  return (\n    <div>\n      <input onChange={handleChange} type=\"text\" name=\"msg\" value={msg} />\n      <button onClick={handleSubmit}>Save</button>\n    </div>\n  );\n};\n\nexport default ListForm;\n"]},"metadata":{},"sourceType":"module"}