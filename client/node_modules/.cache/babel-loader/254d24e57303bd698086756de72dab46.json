{"ast":null,"code":"var _jsxFileName = \"/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: sessionStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n  // Login User\n\n  const login = async formData => {\n    console.log(formData);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/\", formData, config);\n      console.log(res);\n      console.log(res.data.user_token);\n      console.log(res.status);\n\n      if (res.status === 200) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res.data.user_token\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      error: state.error,\n      login,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/saowalucksrikrishna/Desktop/test/react-to-do-list-copy/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AuthState","props","initialState","token","sessionStorage","getItem","isAuthenticated","error","state","dispatch","login","formData","console","log","config","headers","res","post","data","user_token","status","type","payload","response","logout","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,MAApC,QAAkD,UAAlD;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACG,WAAD,EAAcM,YAAd,CAApC,CAP2B,CAS3B;AAEA;;AACA,QAAMQ,KAAK,GAAG,MAAOC,QAAP,IAAoB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,wBAAX,EAAqCN,QAArC,EAA+CG,MAA/C,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACE,IAAJ,CAASC,UAArB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACI,MAAhB;;AAEA,UAAIJ,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACtBX,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAExB,aADC;AAEPyB,UAAAA,OAAO,EAAEN,GAAG,CAACE,IAAJ,CAASC;AAFX,SAAD,CAAR;AAID;AACF,KAZD,CAYE,OAAOZ,KAAP,EAAc;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAE,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAEvB,UADC;AAEPwB,QAAAA,OAAO,EAAEf,KAAK,CAACgB;AAFR,OAAD,CAAR;AAID;AACF,GA1BD,CAZ2B,CAuC3B;;;AACA,QAAMC,MAAM,GAAG,MAAMf,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAEtB;AAAR,GAAD,CAA7B;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELG,MAAAA,eAAe,EAAEE,KAAK,CAACF,eAFlB;AAILC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAJR;AAKLG,MAAAA,KALK;AAMLc,MAAAA;AANK,KADT;AAAA,cAUGvB,KAAK,CAACwB;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxDD;;GAAMzB,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\n\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: sessionStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n\n  // Login User\n  const login = async (formData) => {\n    console.log(formData);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/\", formData, config);\n      console.log(res);\n      console.log(res.data.user_token);\n      console.log(res.status);\n\n      if (res.status === 200) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res.data.user_token,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response,\n      });\n    }\n  };\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n\n        error: state.error,\n        login,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}